name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: Run pre-commit
        run: |
          pre-commit run --all-files
      - name: Verify demo.gif size â‰¤ 2MB
        shell: bash
        run: |
          set -e
          FILE="docs/examples/demo.gif"
          if [ -f "$FILE" ]; then
            BYTES=$(wc -c < "$FILE" | tr -d ' ')
            echo "demo.gif size: $BYTES bytes"
            MAX=$((2*1024*1024))
            if [ "$BYTES" -gt "$MAX" ]; then
              echo "ERROR: $FILE exceeds 2MB"; exit 1; fi
          else
            echo "Note: $FILE not present or empty; skipping size check"
          fi
      - name: Verify CHANGELOG updated when version changes
        shell: bash
        run: |
          set -e
          CURRENT_VER=$(python -c "import nova; print(nova.__version__)" )
          # Determine previous version from main ancestor
          PREV_VER=$(git show origin/main:nova/__init__.py | sed -n "s/^__version__ = \"\(.*\)\"/\1/p" | head -n1 || true)
          if [ -z "$PREV_VER" ] || [ "$CURRENT_VER" = "$PREV_VER" ]; then
            echo "Version unchanged ($CURRENT_VER); skipping CHANGELOG check"; exit 0; fi
          echo "Version changed: $PREV_VER -> $CURRENT_VER"
          if ! git diff --name-only origin/main...HEAD | grep -q "^CHANGELOG.md$"; then
            echo "ERROR: Version changed but CHANGELOG.md not updated"; exit 1; fi
          echo "CHANGELOG.md updated."
      - name: Run tests
        env:
          NOVA_NONINTERACTIVE: '1'
          NOVA_PERMISSION_DEFAULT: 'deny'
        run: |
          pytest -q
